os:
  - linux

language: generic

services:
  - docker
env:
  global:
    - REPO_NAME=idwarp
    - DOCKER_WORKING_DIR=/home/mdolabuser/repos/$REPO_NAME
    - DOCKER_MOUNT_DIR=/home/mdolabuser/travis/$REPO_NAME
  jobs:
    - DOCKER_TAG=py2-latest
    - DOCKER_TAG=py3-stable
    - DOCKER_TAG=py3-latest
    - DOCKER_TAG=py3-impi
    - DOCKER_TAG=py3-centos7-impi

before_install:
  - docker pull mdolab/public:$DOCKER_TAG
  # run Docker, key is we mount the current Travis directory into Docker to access content of repo
  - docker run -t -d 
        --name app
        --mount "type=bind,src=$(pwd),target=$DOCKER_MOUNT_DIR"
        mdolab/public:$DOCKER_TAG
        /bin/bash

install:
  # We thrown away the existing repo in Docker, and copy the new one in-place
  - docker exec -it app /bin/bash -c "rm -rf $DOCKER_WORKING_DIR && cp -r $DOCKER_MOUNT_DIR $DOCKER_WORKING_DIR"
  # Download input files for regression testing
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR/python && wget http://mdolab.engin.umich.edu/sites/default/files/mdolabwebsite/repos/idwarp/input_files.tar.gz && tar -xzf input_files.tar.gz"
  # Copy over the correct config file and modify as needed
  - if [[ "$DOCKER_TAG" == "py3-centos7-impi" ]]; then
      docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && cp config/defaults/config.LINUX_INTEL_OPENMPI.mk config/config.mk";
    else
      docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && cp config/defaults/config.LINUX_GFORTRAN_OPENMPI.mk config/config.mk";
      if [[ "$DOCKER_TAG" == "py2"* ]]; then
        docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && sed -i 's/python3-config/python-config/g' config/config.mk";
      fi
    fi
  
  # Compile real and complex builds
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && make && make -f Makefile_CS PETSC_ARCH=complex-opt-\$COMPILERS-\$PETSCVERSION"

script:
  # Real tests
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR/python/reg_tests && python run_reg_tests.py -nodiff"
  # Complex tests
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR/python/reg_tests && export PETSC_ARCH=complex-opt-\$COMPILERS-\$PETSCVERSION && python run_reg_tests_cs.py -nodiff"
  

after_script:
  - docker rm -f app
