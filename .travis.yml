os: linux
language: generic

branches:
  only:
  - master

services:
  - docker

import: mdolab/.github:travis-docker-tags.yml

before_install:
  - docker pull mdolab/public:$DOCKER_TAG
  # run Docker, key is we mount the current Travis directory into Docker to access content of repo
  - docker run -t -d 
        --name app
        --mount "type=bind,src=$(pwd),target=$DOCKER_MOUNT_DIR"
        mdolab/public:$DOCKER_TAG
        /bin/bash

install:
  # We thrown away the existing repo in Docker, and copy the new one in-place
  - docker exec -it app /bin/bash -c "rm -rf $DOCKER_WORKING_DIR && cp -r $DOCKER_MOUNT_DIR $DOCKER_WORKING_DIR"
  # Download input files for regression testing
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR/input_files && ./get-input-files.sh"
  # Copy over the correct config file and modify as needed
  - if [[ "$DOCKER_TAG" == *"intel"* ]]; then
      docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && cp config/defaults/config.LINUX_INTEL_OPENMPI.mk config/config.mk";
    else
      docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && cp config/defaults/config.LINUX_GFORTRAN_OPENMPI.mk config/config.mk";
    fi
  
  # Compile real and complex builds
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && make && make -f Makefile_CS PETSC_ARCH=complex-opt-\$COMPILERS-\$PETSCVERSION"
  # Install Python interface
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR && pip install ."

script:
  # Real tests
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR/reg_tests && python run_reg_tests.py -nodiff"
  # Complex tests
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR/reg_tests && export PETSC_ARCH=complex-opt-\$COMPILERS-\$PETSCVERSION && python run_reg_tests_cs.py -nodiff"
  

after_script:
  - docker rm -f app
